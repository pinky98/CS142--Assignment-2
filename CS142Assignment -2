# include <iostream>
using namespace std;

struct node {
	int data;
	node *next;

};

class linkedList{

private:
node  *head, *tail;

public: linkedList(){

	head=NULL;
	tail=NULL;

}
	void insert(int value);
	void insert(int value,int position);
	void remove();
	void remove(int position);
	
};

void linkedList::insert(int value){                    //Creating a node at the end of the linked list
	node *temp=new node;
	temp->data=value;
	temp->next=NULL;

	if (head==NULL){
	head=temp;
	tail=temp;
	}
	else{
	tail->next=temp;
	tail=temp;
	}

}

void linkedList::insert(int value,int position){    //Creating a node in a specified position
	node *preceeding, *succeeding;
	node *temp=new node;
	temp->data=value;
	temp->next=NULL;

	succeeding=head;

	for(int i=1; i<position; i++){
		preceeding=succeeding;
		succeeding=succeeding->next;
	}
	preceeding->next=temp;
	temp->next=succeeding;

}

void linkedList::remove(){                          //Deleting a node at the end of the list
	node *preceeding, *succeeding;
	preceeding=NULL;
	succeeding=head;

	while(succeeding->next!=NULL){
		preceeding=succeeding;
		succeeding=succeeding->next;
	}
	tail=preceeding;
	preceeding->next=NULL;
	delete succeeding;
}

void linkedList::remove(int position){             //Deleting a node at a specified position
	node *preceeding,*succeeding;
	succeeding=head;
	for (int i=1; i<position; i++){
		preceeding=succeeding;
		succeeding=succeeding->next;
	}
	preceeding->next=succeeding->next;
	
}

void linkedList::display(){                        //To display the elements in the list
	
	if(head==NULL){

		cout << "The list is empty.";
	}
	else{
		node *temp = head;
		while(temp != NULL){
		cout << temp->data;
		temp = temp->next;
			}
	}
}

int count()                                       //Function to count elements in the list
	{
		node *temp;
		temp = head;
		int a=0;
		while(temp->next!=NULL)
		{
			++a;
			temp = temp->next;	
		}
		cout<<a;
		return a;		
	}


int main(){

	linkedList ll;
	ll.insert(2);
	ll.insert(3);
	ll.insert(4);
	ll.insert(13,8);
	ll.remove();
	ll.remove(4);
	ll.display;
	ll.count();

	return 0;

};

